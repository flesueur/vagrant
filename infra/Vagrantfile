# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
#  config.vm.box = "debian/stretch64"
  config.vm.box = "flesueur/debian-stretch-xfce"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "128"
#    vb.customize ["modifyvm", :id, "--vram", "16"]
#    vb.gui = true
    vb.linked_clone = true
  end

  config.vm.define "vagrant-hacker" do |hacker|
    hacker.vm.hostname = "hacker"
    hacker.vm.network :private_network, virtualbox__intnet: "wan", auto_config: false
    hacker.vm.provision "shell", inline: "/vagrant/files/hacker/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-hacker"
      vb.memory = "256"
      vb.customize ["modifyvm", :id, "--vram", "16"]
    end
  end

  config.vm.define "vagrant-commercial" do |commercial|
    commercial.vm.hostname = "commercial"
    commercial.vm.network :private_network, virtualbox__intnet: "lan", auto_config: false
    commercial.vm.provision "shell", inline: "/vagrant/files/commercial/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-commercial"
      vb.memory = "256"
      vb.customize ["modifyvm", :id, "--vram", "16"]
    end
  end



  config.vm.define "vagrant-firewall" do |firewall|
#    firewall.vm.box = "debian/stretch64"
    firewall.vm.hostname = "firewall"
    firewall.vm.network :private_network, virtualbox__intnet: "wan", auto_config: false
    firewall.vm.network :private_network, virtualbox__intnet: "lan", auto_config: false
    firewall.vm.network :private_network, virtualbox__intnet: "dmz", auto_config: false
    firewall.vm.provision "shell", inline: "/vagrant/files/firewall/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-firewall"
    end
  end


  config.vm.define "vagrant-backbone" do |backbone|
#    backbone.vm.box = "debian/stretch64"
    backbone.vm.hostname = "backbone"
    backbone.vm.network :private_network, virtualbox__intnet: "wan", auto_config: false
    backbone.vm.provision "shell", inline: "/vagrant/files/backbone/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-backbone"
    end
  end


  config.vm.define "vagrant-dmz" do |dmz|
    dmz.vm.hostname = "dmz"
    dmz.vm.network :private_network, virtualbox__intnet: "dmz", auto_config: false
    dmz.vm.provision "shell", inline: "/vagrant/files/dmz/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-dmz"
    end
  end

  config.vm.define "vagrant-filer" do |filer|
    filer.vm.hostname = "filer"
    filer.vm.network :private_network, virtualbox__intnet: "lan", auto_config: false
    #filer.vm.provision "shell", inline: "/vagrant/files/dmz/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-filer"
    end
  end





  config.vm.define "vagrant-home" do |home|
    home.vm.hostname = "home"
    home.vm.network :private_network, virtualbox__intnet: "wan", auto_config: false
    #home.vm.provision "shell", inline: "/vagrant/files/hacker/provision.sh"
    config.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-infra-home"
      vb.memory = "256"
      vb.customize ["modifyvm", :id, "--vram", "16"]
    end
  end


  config.vm.provision "shell", inline: <<-SHELL
     /vagrant/files/basebox/provision.sh
  SHELL
end
